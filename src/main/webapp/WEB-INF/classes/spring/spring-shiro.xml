<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="ShiroRealm" />
		<!-- <property name="sessionManager" ref="sessionManager"/> -->
		<!-- 使用下面配置的缓存管理器 -->
		<property name="cacheManager" ref="cacheManager" />
	</bean>

	<!-- 項目自定义的Realm -->
	<bean id="ShiroRealm" class="com.ccnet.core.shiro.MemberShiroRealm" />

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/user/login" />
		<property name="successUrl" value="/home/index" />
		<property name="unauthorizedUrl" value="/user/login" />
		<!-- anon:匿名拦截器，即不需要登录即可访问；一般用于静态资源过滤 authc:如果没有登录会跳到相应的登录页面登录 user:用户拦截器，用户已经身份验证/记住我登录的都可 -->
		<property name="filterChainDefinitions">
			<value>
				/static/** = anon
				/favicon.ico = anon
				/captcha/** = anon
				/user/login = anon
				/user/forget = anon
				/user/forget/check = anon
				/user/setpwd = anon
				/user/setpwd/save = anon
				/user/register/** = anon
				/user/uregister = anon
				/user/ulogin = anon
				/touch/** = anon
				/wx/** = anon
				/mobile/** = anon
				/barcode/logoCode/** = anon
				/hessian/** = anon
				/upload/** = anon
				/article/** = anon
				/article/list = authc
				/article/info = authc
				/article/url/** = authc
				/article/comment/** = authc
				/nullxh** = anon
				/advertise/forward/** = anon
				/advertise/getadurl/** = anon
				/api/** = anon
				/remote/** = anon
				/MP_verify_**.txt = anon
				/app/invited/.** = anon
				/app/problem/** = anon
				/** = authc
			</value>
		</property>
	</bean>
	<!-- rememberMe管理器 -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" />
	</bean>

	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）dG91dGlhbzEyMzQ1Nw== -->
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('dG91dGlhbzEyMzQ1NQ==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<bean id="ehcacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache/ehcache.xml" />
		<property name="cacheManagerName" value="ehcache" />
	</bean>
	<!-- 缓存管理器 使用Ehcache实现 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="ehcacheManager" />
	</bean>

	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>